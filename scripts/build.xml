<?xml version='1.0' encoding='ISO-8859-1' ?>

<!--

  Ant build script for jpad

  Tested with Apache Ant version 1.6.5 & 1.7

  jdk 1.6+ required.

  Copyright 2011 Arthur Blake

  License TBD

-->

<project name="jpad" default="all" basedir="..">

  <property name="product.name" value="jpad" />

  <!-- release version -->
  <property name="version" value="0.1"/>


  <property name="jdbc.level" value="4" />
  <property name="jvm.ver" value="1.6" />

  <property name="src" value="src" />
  <property name="classes" value="classes" />
  <property name="apidocs" value="doc/apidocs" />


  <target name="all" depends="cleancompile,compile,cleanjar,jar"/>

  <!--
       The ydoc.home.3 and ydoc.home.4 properties are only used for the ydoc.3
       and ydoc.4 targets for producing javadoc with UML

       it requires the commercial ydoc utility
       (see http://www.yworks.com/en/products_ydoc.htm)

       use the javadoc target to generate regular javadoc

       ydoc.home.3 is for jdk1.4 / JDBC 3
       ydoc.home.4 is for jdk1.6 / JDBC 4
  -->

  <property name="ydoc.home.4" value="/Users/arthur/Development/Tools/ydoc-2.2_04-jdk1.5"/>

  <target name="compile" description="compile all the source code">
    <javac source="${jvm.ver}" target="${jvm.ver}" srcdir="${src}" destdir="${classes}"
      deprecation="true" debug="true" includeAntRuntime="false">
      <classpath>
        <pathelement location="$src"/>
        <fileset dir="lib">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
    </javac>
  </target>

  <target name="cleancompile" description="delete all the .class files.">
    <delete dir="${classes}"/>
    <mkdir dir="${classes}"/>
  </target>

  <target name="jar" description="jar up all the class files">
    <mkdir dir="build"/>
    <jar jarfile="build/${product.name}-${version}.jar" basedir="${classes}"/>
  </target>

  <target name="cleanjar" description="delete the jar file">
    <delete file="build/${product.name}-${version}.jar" description="delete the jar file"/>
  </target>


  <target name="cleanjavadoc" description="clean javadoc">
    <delete dir="${apidocs}" />
    <mkdir dir="${apidocs}" />
  </target>
  
  <target name="cleanrelease" description="clean up any release files">
    <delete file="../${product.name}-${version}.zip"/>
  </target>
  
  <target name="clean" depends="cleanrelease,cleanjavadoc,cleanjar,cleancompile" description="clean up all build artifacts"/>

  <target name="release" depends="cleanrelease" description="make a complete release distribution (a .jar zip and tar.gz file for release)">
    <zip destfile="../${product.name}-${version}.zip">
      <zipfileset dir="." prefix="${product.name}-${version}" excludes="*.zip,*.tar.gz,*,iml,*.ipr,*.iws,thirdparty-stuff/**,classes*/**"/>
    </zip>
  </target>

  <!-- make the javadoc (or ydoc which includes UML diagrams) -->

  <target name="javadoc" description="generate the javadoc" depends="cleanjavadoc">
    <delete dir="${apidocs}" />
    <mkdir dir="${apidocs}" />
    <javadoc destdir="${apidocs}" packagenames="jpad.*"
      Windowtitle="${product.name} ${version}"
      Use="true" breakiterator="true">
      <classpath>
        <pathelement location="$src"/>
        <fileset dir="lib">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
      <sourcepath path="${src}"/>

      <!-- note that the jdk source code is referenced here so that javadoc will be generated from
          interface class methods when none is specified in the implementation -->
<!--
      <sourcepath path="/j2sdk1.4.2_13/src"/>
      <link href="http://java.sun.com/j2se/1.4.2/docs/api/"/>
      <link href="http://java.sun.com/j2ee/1.4/docs/api/"/>
      <link href="http://www.slf4j.org/api/"/>
-->
    </javadoc>
  </target>

  <target name="ydoc.4" description="(jdk1.6/JDBC4 version) create javadoc using ydoc doclet to include UML diagrams" depends="cleanjavadoc">

    <property name="ps" value="${path.separator}"/>

    <javadoc destdir="${apidocs}" packagenames="jpad.*"
      maxmemory="512m"
      Windowtitle="${product.name} ${version}"
      Use="true" breakiterator="true">
      <classpath>
        <pathelement location="$src"/>
        <fileset dir="lib">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
      <sourcepath path="${src}"/>

      <!-- note that the jdk source code is referenced here so that javadoc will be generated from
          interface class methods when none is specified in the implementation -->

      <sourcepath path="/jdk/1.6.0_11/src"/>
      <link href="http://java.sun.com/javase/6/docs/api/"/>
      <link href="http://www.slf4j.org/api/"/>

      <!-- ydoc doclet for UML diagrams, see http://www.yworks.com/en/products_ydoc.htm -->
      <doclet name="ydoc.doclets.YStandard"
              path="${ydoc.home.4}/lib/ydoc.jar${ps}${ydoc.home.4}/lib/class2svg.jar${ps}${ydoc.home.4}/resources${ps}${ydoc.home.4}/doc${ps}./${classes}">
        <param name="-author"/>
        <param name="-generic"/>
        <param name="-umlautogen"/>
        <param name="-filterpath" value="${ydoc.home.4}/lib/ydoc.jar"/>
        <param name="-filter" value="ydoc.filters.ExcludeFilter"/>
        <param name="-tag" value="y.precondition"/>
        <param name="-tag" value="y.postcondition"/>
        <param name="-tag" value="y.complexity"/>
        <param name="-tag" value="param"/>
        <param name="-tag" value="return"/>
        <param name="-tag" value="see"/>
        <param name="-tag" value="y.uml"/>
        <param name="-linksource" value="true"/>
      </doclet>
    </javadoc>
  </target>
</project>
